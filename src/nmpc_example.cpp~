#include <acado_toolkit.hpp>

int main( ){
       USING_NAMESPACE_ACADO
       //Variables:
       DifferentialState p;
       DifferentialState v;
       DifferentialState phi;
       DifferentialState omega;
       DifferentialState a;
       
       const double g=9.81;
       const double b=0.20;
      
       //Model equations
      DifferentialEquation f;
        
      f<<dot(p)==v;
      f<<dot(v)==a;
      f<<dot(phi)==omega;
      f<<dot(omega)==-g*sin(phi)-a*cos(phi)-b*omega;
      //Reference functions an weighting matrices:
      Function h,hN;
      h<<p<<v<<phi<<omega<<a;
      hN<<p<<v<<phi<<omega;
      
      DMatrix W=eye(h.getDim());
      DMatrix WN=eye(hN.getDim());
      WN*=5;
     //
     // Optimal Control Problem
     //
     OCP ocp(0.0,3.0,10);
     ocp.subjectTo(f);
     ocp.minimizeLSQ(W,h);
     ocp.minimizeLSQEndTerm(WN,hN);
     ocp.subjectTo(-1.0<=a<=1.0);
     ocp.subjectTo(-0.5<=v<=1.5);
     OCPexport mpc(ocp);
     mpc.set(HESSIAN_APPROXIMATIOM, GAUSS_NEWTON);
     mpc.set(DISCRETIZATION_TYPE, SINGLE_SHOOTING);
     mpc.set(INTEGRATOR_TYPE, INT_RK4);
     mpc.set(NUM_INTEGRATOR_STEPS, 30);
     mpc.set(QP_SOLVER, QP_QPOASES);
     mpc.set(GENERATE_TEST_FILE,YES);
     mpc.set(GENERATE_MAKE_FILE,YES);
      if(mpc.exportCode("getting_started_export")!=SUCCESSFULL_RETURN)
          exit(EXIT_FAILURE);
     mpc.printDimensionsQP();
   return EXIT_SUCCES;
} 
